---
- hosts: lamp-db
  become: yes

  vars_files:
    - vars.yml
 
  pre_tasks:
    - name: check if database_file exists
      stat: 
        path: "/tmp/database_file"
      register: database_file


    - name: Create dynamic MySQL vars file.
      local_action:
        module: template
        src: "templates/mysql_databases.j2"
        dest: "/tmp/database_file"
      become: no
      when: database_file.stat.exists == false

    - include_vars:
        file: "/tmp/database_file"

    # - name: Create dynamic MySQL vars - testing only.
    #   set_fact:
    #     mysql_users:
    #       - name: mycompany_user
    #         host: "{{ hostvars[groups['lamp-www'][0]]['ansible_host'] }}"
    #         password: secret
    #         priv: "*.*:ALL"
    #       - name: mycompany_user
    #         host: "{{ hostvars[groups['lamp-www'][1]]['ansible_host'] }}"
    #         password: secret
    #         priv: "*.*:ALL"
    #       - name: mycompany_user
    #         host: "{{ hostvars[groups['lamp-varnish'][0]]['ansible_host'] }}"
    #         password: secret
    #         priv: "*.*:ALL"

    - name: Create dynamic MySQL replication_master var.
      set_fact:
        mysql_replication_master: "{{ hostvars[groups['lamp-db'][0]]['ansible_host'] }}"
        mysql_replication_user:
          name: 'replication'
          password: "{{ lookup('password', '/tmp/mariadb/replication chars=ascii_letters') }}"

  roles:
    - geerlingguy.firewall
    - geerlingguy.ntp
    - geerlingguy.mysql

  tasks:
    - name: Set selinux mysql_connect_any flag on and keep it persistent across reboots
      seboolean:
        name: mysql_connect_any
        state: yes
        persistent: yes
